# Disable daemon
daemon off;

# Number of worker processes (adjust as needed)
worker_processes auto;

# Error log location and log level
error_log /dev/stderr warn;

# PID file (must be in a writable location for the user)
pid /tmp/nginx.pid;

events {
    # Maximum number of simultaneous connections
    worker_connections 1024;
}

http {
    # Include mime types
    include       mime.types;
    default_type  application/octet-stream;

    # Log format
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    # Access log location
    access_log  /dev/stdout  main;

    # Sendfile optimization
    sendfile off;

    # TCP settings
    keepalive_timeout  65;

    # Set tmp paths
    client_body_temp_path /tmp/client_temp;
    proxy_temp_path       /tmp/proxy_temp_path;
    fastcgi_temp_path     /tmp/fastcgi_temp;
    uwsgi_temp_path       /tmp/uwsgi_temp;
    scgi_temp_path        /tmp/scgi_temp;

    # Upstream definition for PHP-FPM
    upstream php-fpm {
        # Use TCP connection to PHP-FPM running on localhost port 9000
        server 127.0.0.1:9000;
    }

    server {
        # Listen on port 8080 (non-privileged port)
        listen 8080 default_server;
        listen [::]:8080 default_server;

        # Server name (adjust as needed)
        server_name _;

        # Root directory for the application
        root /opt/freshrss/p;

        # Index files
        index index.php index.html;

        # Disable sending of ETag headers
        etag off;

        # Set the default charset to UTF-8
        charset utf-8;

        # Location block for static files with caching and compression
        location ~* \.(css|gif|html|ico|js|png|svg|woff|woff2)$ {
            # Add Cache-Control header to make content public
            add_header Cache-Control "public";
            # Set expiration time to 1 month
            expires 1M;
            # Enable gzip compression for these file types
            gzip_static on;
            gzip_types application/javascript application/json application/xhtml+xml image/svg+xml text/css;
            # Try to serve the file, return 404 if not found
            try_files $uri $uri/ =404;
        }

        # Location block for handling PHP files in /api with PATH_INFO
        location ~ ^/api/.*\.php(/|$) {
            # Disable caching for PHP files
            expires off;

            # Split the URI to extract script filename and path info
            fastcgi_split_path_info ^(.+\.php)(/.*)$;

            # Check that the script file exists
            try_files $fastcgi_script_name =404;

            # Bypass the fact that try_files resets $fastcgi_path_info
            # see: http://trac.nginx.org/nginx/ticket/321
            set $path_info $fastcgi_path_info;
            fastcgi_param PATH_INFO $path_info;

            # Set the script filename parameter for PHP
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            # Pass the client's IP address to PHP
            fastcgi_param CONN_REMOTE_ADDR $remote_addr;

            # Include default FastCGI parameters
            include fastcgi_params;

            # Set error handling
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 300;

            # Pass the request to PHP-FPM
            fastcgi_pass php-fpm;
        }

        # Handling PHP scripts
        location ~ \.php$ {
            # Disable caching for PHP files
            expires off;

            # Try to serve the file directly, fallback to 404
            try_files $fastcgi_script_name =404;

            # Set the script filename parameter for PHP
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

            # Pass the client's IP address to PHP
            fastcgi_param CONN_REMOTE_ADDR $remote_addr;

            # Set up FastCGI parameters
            include fastcgi_params;

            # Set error handling
            fastcgi_intercept_errors on;
            fastcgi_read_timeout 300;

            # Pass the request to PHP-FPM
            fastcgi_pass php-fpm;
        }

        # Deny access to .htaccess files (security measure)
        location ~ /\.ht {
            deny all;
        }

        # Location block for all other requests
        location / {
            # Set expiration time to 1 month
            expires 1M;

            # Try to serve the file or directory, return 404 if not found
            try_files $uri $uri/ =404;
        }
    }
}