name: Build and Push Container

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      dockerfile:
        default: Dockerfile
        type: string
      tag:
        required: true
        type: string
      latest:
        default: false
        type: boolean
      push:
        default: false
        type: boolean

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform: ["amd64", "arm64"]
    steps:
      # Install qemu
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      # Export arch
      - name: Export image name and arch
        run: |
          echo "IMAGE=${IMAGE}" >> ${GITHUB_ENV}
          echo "PLATFORM=${PLATFORM}" >> ${GITHUB_ENV}
          [ "${PLATFORM}" = "amd64" ] && echo "BUILDAH_ARCH=linux/amd64" >> ${GITHUB_ENV} || true
          [ "${PLATFORM}" = "arm64" ] && echo "BUILDAH_ARCH=linux/arm64/v8" >> ${GITHUB_ENV} || true
          echo "DOCKERFILE=${DOCKERFILE}" >> ${GITHUB_ENV}
          echo "TAG=${TAG}" >> ${GITHUB_ENV}
        env:
          PLATFORM: ${{ matrix.platform }}
          IMAGE: ${{ inputs.image }}
          TAG: ${{ inputs.tag }}

      - name: Build image with buildah
        uses: redhat-actions/buildah-build@v2
        with:
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.TAG }}-${{ env.PLATTFORM }}
          platform: ${{ env.BUILDAH_ARCH }}
          context: ${{ env.IMAGE }}
          containerfiles: |
            ${{ env.IMAGE }}/${{ env.DOCKERFILE }}

      - name: Create tar image
        run: |
          buildah push erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}-${{ env.PLATTFORM }} oci-archive:/tmp/${{ env.IMAGE }}-${{ env.TAG }}-${{ env.PLATTFORM }}.tar

      # Upload container
      - name: Upload container
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: ${{ env.IMAGE }}-${{ env.TAG }}
          path: /tmp/${{ env.IMAGE }}-${{ env.TAG }}-${{ env.ARCH }}.tar
          if-no-files-found: error
          retention-days: 3

  push:
    if: ${{ inputs.push }}
    name: Push image
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Setup environment variables
        run: |
          echo "TAG=${TAG}" >> ${GITHUB_ENV}
          echo "VERSION=${VERSION}" >> ${GITHUB_ENV}
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        env:
          IMAGE: ${{ inputs.image }}
          TAG: ${{ inputs.tag }}

      - name: Download images
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4
        with:
          name: ${{ env.IMAGE }}-${{ env.TAG }}
          path: /tmp

      - name: List images
        run: |
          ls /tmp

      - name: Create manifest
        run: |
          buildah manifest create erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}
          for arch in "amd64" "arm64"; do
            buildah manifest add erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} oci-archive:/tmp/${{ env.IMAGE }}-${{ env.TAG }}-$arch.tar
          done 

      - name: Add build date tag
        run: |
          buildah tag erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}-${{ env.DATE }}
          echo "PUSH_TAGS=\"erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}-${{ env.DATE }}" >> $GITHUB_ENV

      - name: Tag image as latest
        if: ${{ inputs.latest }}
        run: |
          buildah tag erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} erhardtconsulting/${{ env.IMAGE }}:latest
          echo "PUSH_TAGS=\"erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}-${{ env.DATE }} erhardtconsulting/${{ env.IMAGE }}:latest\"" >> $GITHUB_ENV

      - name: Push image to ghcr
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: ghcr.io/erhardtconsulting
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Push image to quay.io
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: quay.io/erhardtconsulting
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}
          username: "${{ secrets.QUAYIO_USERNAME }}"
          password: "${{ secrets.QUAYIO_TOKEN }}"

      - name: Push image to docker.io
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: docker.io/erhardtconsulting
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
