name: Build and Push Container

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      dockerfile:
        default: Dockerfile
        type: string
      tag:
        required: true
        type: string
      latest:
        default: false
        type: boolean
      push:
        default: false
        type: boolean
      push-quay:
        default: true
        type: boolean
      push-docker:
        default: true
        type: boolean
      use-swap:
        default: false
        type: boolean
      swap-size:
        default: "8G"
        type: string
      architectures:
        description: "List of architectures as JSON-array"
        type: string
        default: '["amd64","arm64"]'

permissions:
  contents: read
  packages: write

jobs:
  build:
    name: Build image
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        platform: ${{ fromJSON(inputs.architectures) }}
    steps:
      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Setup environment variables
        run: |
          echo "IMAGE=${IMAGE}" >> ${GITHUB_ENV}
          echo "PLATFORM=${PLATFORM}" >> ${GITHUB_ENV}
          [ "${PLATFORM}" = "amd64" ] && echo "BUILDAH_ARCH=linux/amd64" >> ${GITHUB_ENV} || true
          [ "${PLATFORM}" = "arm64" ] && echo "BUILDAH_ARCH=linux/arm64/v8" >> ${GITHUB_ENV} || true
          echo "DOCKERFILE=${DOCKERFILE}" >> ${GITHUB_ENV}
          echo "TAG=${TAG}" >> ${GITHUB_ENV}
        env:
          PLATFORM: ${{ matrix.platform }}
          IMAGE: ${{ inputs.image }}
          DOCKERFILE: ${{ inputs.dockerfile }}
          TAG: ${{ inputs.tag }}

      - name: Use Swap | Report without Swap
        if: ${{ inputs.use-swap }}
        run: |
          echo "Available memory and swap:"
          free -h

      - name: Use Swap | Enable Swap
        if: ${{ inputs.use-swap }}
        id: swap_setup
        run: |
          SWAP_FILE="$(swapon --show=NAME | tail -n 1)"
          if [ -n "$SWAP_FILE" ]; then
            sudo swapoff $SWAP_FILE
            sudo rm $SWAP_FILE
          fi
          
          SWAP_FILE="$(mktemp -p ${{ github.workspace }})"
          echo "SWAP_FILE=$SWAP_FILE" >> $GITHUB_OUTPUT
          
          sudo fallocate -l "${{ inputs.swap-size }}" $SWAP_FILE
          sudo chown root:root $SWAP_FILE
          sudo chmod 600 $SWAP_FILE
          sudo mkswap $SWAP_FILE
          sudo swapon $SWAP_FILE

      - name: Use Swap | Report with Swap
        if: ${{ inputs.use-swap }}
        run: |
          echo "Available memory and swap:"
          free -h

      - name: Build image with buildah
        uses: redhat-actions/buildah-build@7a95fa7ee0f02d552a32753e7414641a04307056 # v2
        with:
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.TAG }}-${{ env.PLATFORM }}
          platform: ${{ env.BUILDAH_ARCH }}
          context: ${{ env.IMAGE }}
          containerfiles: |
            ${{ env.IMAGE }}/${{ env.DOCKERFILE }}

      - name: Create tar image
        run: |
          buildah push erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}-${{ env.PLATFORM }} oci-archive:/tmp/${{ env.IMAGE }}-${{ env.TAG }}-${{ env.PLATFORM }}.tar

      # Upload container
      - name: Upload container
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4
        with:
          name: ${{ env.IMAGE }}-${{ env.TAG }}-${{ env.PLATFORM }}
          path: /tmp/${{ env.IMAGE }}-${{ env.TAG }}-${{ env.PLATFORM }}.tar
          if-no-files-found: error
          retention-days: 3

      - name: Use Swap | Disable Swap
        if: ${{ inputs.use-swap }}
        run: |
          SWAP_FILE="${{ steps.swap_setup.outputs.SWAP_FILE }}"
          sudo swapoff $SWAP_FILE
          sudo rm $SWAP_FILE

  push:
    if: ${{ inputs.push }}
    name: Push image
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Setup environment variables
        run: |
          echo "IMAGE=${IMAGE}" >> ${GITHUB_ENV}
          echo "TAG=${TAG}" >> ${GITHUB_ENV}
          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV
        env:
          IMAGE: ${{ inputs.image }}
          TAG: ${{ inputs.tag }}

      - name: Download all artifacts
        run: |
          ARCHS=$(echo '${{ inputs.architectures }}' | jq -r '.[]')
          mkdir -p /tmp
          for arch in $ARCHS; do
            echo "==> Downloading artifact: $arch"
            gh run --repo github.com/erhardtconsulting/images download ${GITHUB_RUN_ID} --name "${IMAGE}-${TAG}-$arch" --dir /tmp
          done
        env:
          IMAGE: ${{ env.IMAGE }}
          TAG: ${{ env.TAG }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List images
        run: ls -lh /tmp

      - name: Create multiarch-manifest
        run: |
          ARCHS=$(echo '${{ inputs.architectures }}' | jq -r '.[]')
          buildah manifest create erhardtconsulting/${IMAGE}:${TAG}
          for arch in $ARCHS; do
            echo "==> Adding: $arch"
            buildah manifest add erhardtconsulting/${IMAGE}:${TAG} oci-archive:/tmp/${IMAGE}-${TAG}-${arch}.tar
          done
        env:
          IMAGE: ${{ env.IMAGE }}
          TAG: ${{ env.TAG }}

      - name: Add tags
        run: |
          for registry in "ghcr.io" "quay.io" "docker.io"; do
            buildah tag erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} ${registry}/erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }}
          done
          echo "PUSH_TAGS=${{ env.TAG }}" >> $GITHUB_ENV

      - name: Tag image as latest
        if: ${{ inputs.latest }}
        run: |
          for registry in "ghcr.io" "quay.io" "docker.io"; do
            buildah tag erhardtconsulting/${{ env.IMAGE }}:${{ env.TAG }} ${registry}/erhardtconsulting/${{ env.IMAGE }}:latest
          done
          echo "PUSH_TAGS=${{ env.TAG }} latest" >> $GITHUB_ENV

      - name: Log in to ghcr.io
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        with:
          registry: ghcr.io/erhardtconsulting
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Log in to Quay.io
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        with:
          registry: quay.io/erhardtconsulting
          username: ${{ secrets.QUAYIO_USERNAME }}
          password: ${{ secrets.QUAYIO_TOKEN }}

      - name: Log in to Docker Hub
        uses: redhat-actions/podman-login@4934294ad0449894bcd1e9f191899d7292469603 # v1
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to ghcr
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: ghcr.io/erhardtconsulting
          image: ${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}

      - name: Push image to quay.io
        if: ${{ inputs.push-quay }}
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: quay.io/erhardtconsulting
          image: ${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}

      - name: Push image to docker.io
        if: ${{ inputs.push-docker }}
        uses: redhat-actions/push-to-registry@5ed88d269cf581ea9ef6dd6806d01562096bee9c # v2
        with:
          registry: docker.io
          image: erhardtconsulting/${{ env.IMAGE }}
          tags: ${{ env.PUSH_TAGS }}