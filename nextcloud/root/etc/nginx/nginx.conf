user nextcloud;
worker_processes 1;
pid /var/run/nginx.pid;
daemon off;

events {
  worker_connections 1024;
  use epoll;
}

http {
  include /etc/nginx/mime.types;

  default_type  application/octet-stream;
  access_log /dev/stdout;
  error_log /dev/stderr error;
  sendfile on;
  keepalive_timeout 15;
  keepalive_disable msie6;
  keepalive_requests 100;
  tcp_nopush on;
  tcp_nodelay on;
  server_tokens off;

  fastcgi_temp_path /tmp/fastcgi 1 2;
  client_body_temp_path /tmp/client_body 1 2;

  server {
    listen 8080;

    add_header Referrer-Policy no-referrer;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Download-Options "noopen" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Robots-Tag "none" always;
    add_header X-XSS-Protection "1; mode=block" always;

    fastcgi_hide_header X-Powered-By;

    # allow proxy to set real ip
    set_real_ip_from 172.16.0.0/12; # normally other docker containers use this range
    real_ip_header X-Forwarded-For;

    root /opt/nextcloud;

    location = /robots.txt {
      allow all;
      log_not_found off;
      access_log off;
    }

    location ^~ /.well-known {
      location = /.well-known/carddav     { return 301 /remote.php/dav/; }
      location = /.well-known/caldav      { return 301 /remote.php/dav/; }
      location ^~ /.well-known            { return 301 /index.php$uri; }

      try_files $uri $uri/ =404;
    }

    # set max upload size
    client_max_body_size 10G;

    # upload timeout 15min
    fastcgi_read_timeout 900;

    #55: increase fastcgi buffers
    fastcgi_buffer_size 8K;
    fastcgi_buffers 64 8K;

    gzip on;
    gzip_vary on;
    gzip_comp_level 4;
    gzip_min_length 256;
    gzip_buffers 4 8k;
    gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
    gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

    location / {
      rewrite ^ /index.php;
    }

    location ~ ^\/(?:build|tests|config|lib|3rdparty|templates|data)\/ {
      deny all;
    }

    location ~ ^\/(?:\.|autotest|occ|issue|indie|db_|console) {
      deny all;
    }

    location ~ ^\/(?:index|remote|public|cron|core\/ajax\/update|status|ocs\/v[12]|updater\/.+|oc[ms]-provider\/.+)\.php(?:$|\/) {
      fastcgi_split_path_info ^(.+?\.php)(\/.*|)$;
      set $path_info $fastcgi_path_info;
      try_files $fastcgi_script_name =404;
      include fastcgi_params;
      fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
      fastcgi_param PATH_INFO $path_info;

      # Avoid sending the security headers twice
      fastcgi_param modHeadersAvailable true;

      # Enable pretty urls
      fastcgi_param front_controller_active true;
      fastcgi_pass unix:/var/run/php-fpm.sock;
      fastcgi_intercept_errors on;
      fastcgi_request_buffering off;
    }

    location ~ ^\/(?:updater|oc[ms]-provider)(?:$|\/) {
      try_files $uri/ =404;
      index index.php;
    }

    location ~ \.(?:css|js|woff2?|svg|gif|map)$ {
      try_files $uri /index.php$request_uri;
      add_header Cache-Control "public, max-age=15778463";
      add_header Referrer-Policy "no-referrer" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-Download-Options "noopen" always;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Permitted-Cross-Domain-Policies "none" always;
      add_header X-Robots-Tag "none" always;
      add_header X-XSS-Protection "1; mode=block" always;

      access_log off;
    }

    location ~ \.(?:png|html|ttf|ico|jpg|jpeg|bcmap)$ {
      try_files $uri /index.php$request_uri;

      access_log off;
    }
  }
}
